{
  # optional if description template is provided
  description: "basic healthcheck on the gateway",

  #optional - category will be captured by kibana
  tag: {
    category: "healthcheck"
  }

  alex: "hello"

  # skip the entire case if not true
  #precondition

  requests: [

    {
      # ----- Request fields
      # optional
      # authorization: {
      #  user:
      #  password:
      # },

      #optional javascript skip the request if not true
      #precondition: {}

      #optional - by default it's a GET
      # method: "GET"

      #optional - key / value
      # headers: {

      #}

      #optional - get merged at the beginning of the url
      #host: ${loc-gateway},

      #mandatory
      url: ${loc-gateway}"/actuator/health",

      #optional
      # body: {}

      #optional - for executing js or sql expression
      # expression

      #optional
      #parameters: - key / value {
      #}

      # ---------- Response handling

      # all optionals
      # body, status, headers are returned from the response

      assertions: [
        "status === 200"
      ],
      checks: [
        "body.status === 'UP'"
        "body.details"
        "body.details.diskSpace.status === 'UP'"
      ],
      output: {
        vault_version: """
          var bob = 'hello'
          return bob + ' ---> ' + body.details.vault.details.version + '--->' + """${alex},
        vault_version_V2: """
          var bob = 'hello'
          return bob + ' ---> ' + body.details.vault.details.version + '--->' + alex
        """
      }
      #optional
      #output: {
      # my_variable: ""
      #},
      #output_to_session: {
      #}

    },
    {
      # can use siingular form: file
      files: [
        "_healthcheck-not-run.conf",
        "_healthcheck-not-run.conf"
      ]
    },
    {
      expression: """
        out.println('-----> ' + JSON.stringify(body))
      """
    }

  ]

}